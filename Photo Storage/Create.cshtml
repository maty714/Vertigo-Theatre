@model TheatreCMS3.Areas.Prod.Models.ProductionMember

@{
    /*ViewBag.Title = "Create";*/

    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>Create</h2>*@


@using (Html.BeginForm("Create", "ProductionMembers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4>Create Production Member</h4>
        <hr />
        <div class="Prod-Create-Back">
            <div class="Prod-Create-Center">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Year" } })
                        @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MyProperty, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.MyProperty, htmlAttributes: new { @class = "form-control Prod-Create--InputBorder" })
                        @Html.ValidationMessageFor(model => model.MyProperty, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Bio" } })
                        @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.CurrentMember, new { htmlAttributes = new { @class = "Prod-Create--InputBorder" } })
                            @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Character" } })
                        @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Cast Year" } })
                        @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DebutYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DebutYearLeft, new { htmlAttributes = new { @class = "form-control Prod-Create--InputBorder", @placeholder = "Enter Debut Year" } })
                        @Html.ValidationMessageFor(model => model.DebutYearLeft, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" id="postedFile" name="postedFile" />
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create Member" class="Prod-Create--button1" />
                    </div>
                </div>

                <div>
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("Back to List", "Index", "ProductionMembers", null, new { @class = "Prod-Create--button2" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
